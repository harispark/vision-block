<Window x:Class="VisionBlockApplication.Views.Pages.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:local="clr-namespace:VisionBlockApplication"
        xmlns:controls="clr-namespace:VisionBlockApplication.Views.Controls"
        xmlns:analysis="clr-namespace:VisionBlockApplication.Views.Controls.Analysis"
        xmlns:converter ="clr-namespace:VisionBlockApplication.Converters"
        xmlns:customControl="clr-namespace:VisionBlockApplication.Views.Controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        TextElement.FontSize="12"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="700" Width="1000">

    <Window.Resources>
        <converter:ProcessingButtonCategoryToBrushConverter x:Key="CategoryToBrushConverter"/>
        <converter:ProcessingEnumCategoryToTextConverter x:Key="CategoryToTextConverter"/>
        <PopupAnimation x:Key="{x:Static SystemParameters.ToolTipPopupAnimationKey}">Fade</PopupAnimation>
        <Storyboard x:Key="StoryBoard_DisplayFullImage">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="FullScreenImage">
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="{Binding ImageFullScreenSize}"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="FullScreenImage">
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="{Binding ImageFullScreenSize}"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryBoard_HideFullImage">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="FullScreenImage">
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="FullScreenImage">
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="FullScreenImage">
            <BeginStoryboard Storyboard="{StaticResource StoryBoard_DisplayFullImage}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="FullScreenImage">
            <BeginStoryboard Storyboard="{StaticResource StoryBoard_HideFullImage}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Canvas Panel.ZIndex="3" Grid.Row="0" Grid.RowSpan="2" Name="canvasDragButtons" PreviewMouseMove="CanvasDragButtons_MouseMove" PreviewMouseUp="canvasDragButtons_MouseUp">
            <Button Name="button" Content="loooool" Visibility="Hidden"></Button>
        </Canvas>

        <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}" Panel.ZIndex="2">
            <ItemsControl Name="IC" ItemsSource="{Binding Buttons}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Badged Badge="{Binding ProcessingCategoryInput, Converter={StaticResource CategoryToTextConverter}}" Margin="20,10" BadgeColorZoneMode="Accent" BadgePlacementMode="BottomLeft">
                            <materialDesign:Badged Badge="{Binding ProcessingCategoryOutput, Converter={StaticResource CategoryToTextConverter}}" Margin="0,0" BadgeColorZoneMode="Accent" BadgePlacementMode="TopRight">
                                <Button Content="{Binding NameButton}" Width="100" Margin="3,1" Command="{Binding CreateSpecificBlock_Command}" Style="{StaticResource MaterialDesignRaisedLightButton}" PreviewMouseDown="Button_MouseDown" IsEnabled="{Binding Enable}">
                                    <Button.ToolTip>
                                        <ToolTip Content="{Binding Description}"/>
                                    </Button.ToolTip>
                                </Button>
                            </materialDesign:Badged>
                        </materialDesign:Badged>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>

        <Border Grid.Row="1" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource PrimaryHueLightBrush}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <controls:ImageSelector x:Name="Selector" Grid.Column="0" Grid.Row="0" Panel.ZIndex="4"></controls:ImageSelector>
                <Canvas Name="ParentCanvas" Grid.Column="1" Grid.Row="0" PreviewMouseMove="Canvas2_PreviewMouseMove" PreviewMouseUp="Canvas2_PreviewMouseUp" Background="{DynamicResource MaterialDesignPaper}" MouseWheel="canvas2_MouseWheel" MouseDown="canvas2_MouseDown" Panel.ZIndex="1" KeyDown="ParentCanvas_KeyDown" Focusable="True">
                    <Grid Width="{Binding ActualWidth, ElementName=ParentCanvas}" Height="{Binding ActualHeight, ElementName=ParentCanvas}" Panel.ZIndex="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Width="40" Height="40"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Importer blocs"
                                        Command="{Binding ImportBlocsCommand}">
                                <materialDesign:PackIcon Kind="FileDownload" Width="25" Height="25"/>
                            </Button>
                            <Button Grid.Column="2" Width="40" Height="40"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Exporter blocs"
                                        Command="{Binding ExportBlocsCommand}">
                                <materialDesign:PackIcon Kind="FileUpload" Width="25" Height="25"/>
                            </Button>
                            <Button Grid.Column="4" Width="40" Height="40"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Supprimer tout les blocs"
                                        Command="{Binding DeleteAllBlocksCommand}">
                                <materialDesign:PackIcon Kind="Delete" Width="25" Height="25"/>
                            </Button>
                        </Grid>
                        <Grid Grid.Row="2" Margin="0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Bottom">
                                <TextBlock VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource MaterialDesignBody}">Light</TextBlock>
                                <ToggleButton Margin="0,10" Command="{Binding ToggleBaseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />
                                <TextBlock VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource MaterialDesignBody}">Dark</TextBlock>
                            </StackPanel>
                            <Button Grid.Column="2" Width="80" Height="80"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Executer le traitement"
                                        Command="{Binding TreeCommand}" IsEnabled="{Binding DisplayButtonExecute}">
                                <materialDesign:PackIcon Kind="Play" Width="50" Height="50"/>
                            </Button>
                            <Button Grid.Column="4" Width="40" Height="40" VerticalAlignment="Bottom"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Zoom Avant"
                                    Click="ZoomIn">
                                <materialDesign:PackIcon Kind="ZoomIn" Width="25" Height="25"/>
                            </Button>
                            <Button Grid.Column="5" Width="40" Height="40" VerticalAlignment="Bottom"
                                        Background="{DynamicResource SecondaryAccentBrush}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Zoom Arrière"
                                    Click="ZoomOut">
                                <materialDesign:PackIcon Kind="ZoomOut" Width="25" Height="25"/>
                            </Button>
                        </Grid>
                    </Grid>
                    <Canvas Name="canvas2">
                        <Canvas.RenderTransform>
                            <MatrixTransform/>
                        </Canvas.RenderTransform>
                        <ItemsControl ItemsSource="{Binding Lines}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <!--<Line X1="{Binding From.X}" Y1="{Binding From.Y}" X2="{Binding To.X}" Y2="{Binding To.Y}" Stroke="{DynamicResource MaterialDesignBodyLight}" StrokeThickness="8" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>-->
                                    <Path Stroke="{DynamicResource MaterialDesignBodyLight}" StrokeThickness="{Binding Thickness}" MouseEnter="Path_MouseEnter" MouseLeave="Path_MouseLeave" MouseDown="Path_MouseDown_1">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    <PathFigure StartPoint="{Binding From}" IsClosed="False">
                                                        <BezierSegment Point1="{Binding FromControl}" Point2="{Binding ToControl}" Point3="{Binding To}"/>
                                                    </PathFigure>
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ItemsControl ItemsSource="{Binding EmptyBlocks}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <customControl:EmptyBlock/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="UserControl">
                                    <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                    <Setter Property="Canvas.Top"   Value="{Binding Position.Y}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Canvas>
                    <Image Name="FullScreenImage" Visibility="{Binding ImageFullScreenDisplay}" RenderTransformOrigin="0.5 0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                </Canvas>
                <Border Grid.Column="2" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1 0 0 0" Panel.ZIndex="4">
                    <Expander ExpandDirection="Left" IsExpanded="False" Grid.Column="2" Foreground="{DynamicResource MaterialDesignBody}">
                        <Expander.Header>
                            <TextBlock Text="Analyse" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <ContentControl Name="analysisControl" Width="300" Height="600"></ContentControl>
                    </Expander>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>